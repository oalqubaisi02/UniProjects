/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package onlinemarketplace;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 *
 */
public class MarketPlaceFrame extends javax.swing.JFrame {

    /**
     * Creates new form RegisterFrame
     */
    Object columns[] = {"Id", "Name", "Price", "Quantiy"};

    DefaultTableModel defaultTableModel = new DefaultTableModel(columns, 0);

    DefaultTableModel cartTableModel = new DefaultTableModel(columns, 0);

    ShoppingCart shoppingCart = new ShoppingCart();

    private static Integer productId = 0;

    TableRowSorter sorter = new TableRowSorter<>(defaultTableModel);

    IProductService iProductService = new ProductService();
    ICustomerService iCustomerService = new CustomerService();
    ISellerService iSellerService = new SellerService();
    List<Product> products = new ArrayList<>();

    public MarketPlaceFrame() {
        initComponents();
        fillCustomersCombo();
        fillSellerCombo();
        //setSize(1100, 950);
        setLocation(350, 50);
        products = iProductService.getAllProducts();
        fillTable();

    }

    public void fillCustomersCombo() {
        List<Customer> customers = iCustomerService.getAllCustomers();
        for (Customer customer : customers) {
            customerCombo.addItem(customer.getName());
        }
    }

    public void fillSellerCombo() {
        List<Seller> sellers = iSellerService.getAllSellers();
        for (Seller seller : sellers) {
            sellCombo.addItem(seller.getName());
        }
    }

    public void fillTable() {
        defaultTableModel = new DefaultTableModel(columns, 0);
        for (Product p : products) {
            Object row[] = {p.getProductId(), p.getName(), p.getPrice(), p.getQuantityAvailable()};
            defaultTableModel.addRow(row);
            productTable.setModel(defaultTableModel);
        }
        productTable.getColumnModel().getColumn(0).setWidth(0);
        productTable.getColumnModel().getColumn(0).setMinWidth(0);
        productTable.getColumnModel().getColumn(0).setMaxWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        headerLbl = new javax.swing.JLabel();
        quantityLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        customerLbl = new javax.swing.JLabel();
        customerCombo = new javax.swing.JComboBox<>();
        sellCombo = new javax.swing.JComboBox<>();
        sellerLbl = new javax.swing.JLabel();
        productField = new javax.swing.JTextField();
        productLbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        quantityField = new javax.swing.JSpinner();
        orderBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        outputField = new javax.swing.JTextArea();
        addBtn = new javax.swing.JButton();
        clearOrderBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerLbl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        headerLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLbl.setText("Order Page");

        quantityLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        quantityLbl.setText("Quantity");

        cartTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(cartTable);

        customerLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customerLbl.setText("Customer");

        customerCombo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        sellCombo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        sellerLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        sellerLbl.setText("Seller");

        productField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        productField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productFieldKeyReleased(evt);
            }
        });

        productLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        productLbl.setText("Serach Product");

        productTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(productTable);

        quantityField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        orderBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        orderBtn.setText("Make Order");
        orderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtnActionPerformed(evt);
            }
        });

        outputField.setColumns(20);
        outputField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        outputField.setRows(5);
        jScrollPane3.setViewportView(outputField);

        addBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addBtn.setText("Add to Cart");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        clearOrderBtn.setText("Clear Order");
        clearOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearOrderBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(headerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(customerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(customerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(sellerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(sellCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(productLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(productField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(quantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(clearOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(headerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseClicked
        productId = (Integer) cartTable.getValueAt(cartTable.getSelectedRow(), 0);
    }//GEN-LAST:event_cartTableMouseClicked

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        productId = (Integer) productTable.getValueAt(productTable.getSelectedRow(), 0);
    }//GEN-LAST:event_productTableMouseClicked

    private void orderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtnActionPerformed
        outputField.setText("Customer : " + customerCombo.getSelectedItem().toString() + "          "
                + "Seller : " + sellCombo.getSelectedItem().toString() + "\n\n Order Details\n\n"
                + shoppingCart.displayCart());
    }//GEN-LAST:event_orderBtnActionPerformed

    private void productFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productFieldKeyReleased

        TableRowSorter sorter = new TableRowSorter<>(defaultTableModel);
        productTable.setRowSorter(sorter);

        String content = productField.getText();
        if (content.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter(content));
        }
    }//GEN-LAST:event_productFieldKeyReleased

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        for (Product p : products) {
            if (p.getProductId() == productId) {
                Integer quantity = Integer.parseInt(quantityField.getValue().toString());
                Product cartedProduct = new Product();
                cartedProduct.setProductId(p.getProductId());
                cartedProduct.setName(p.getName());
                cartedProduct.setPrice(p.getPrice());
                cartedProduct.setDescription(p.getDescription());
                cartedProduct.setQuantityAvailable(quantity);
                try {
                    p.decreaseQuantity(quantity);
                } catch (OutOfStockException ex) {
                    Logger.getLogger(MarketPlaceFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                Object row[] = {p.getProductId(), p.getName(), quantity * p.getPrice(), quantity};
                cartTableModel.addRow(row);
                cartTable.setModel(cartTableModel);
                shoppingCart.addItem(cartedProduct);
            }
        }
        fillTable();
        iProductService.writeProducts(products);
    }//GEN-LAST:event_addBtnActionPerformed

    private void clearOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearOrderBtnActionPerformed
        cartTableModel.setRowCount(0); 
        outputField.setText("");
    }//GEN-LAST:event_clearOrderBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarketPlaceFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton clearOrderBtn;
    private javax.swing.JComboBox<String> customerCombo;
    private javax.swing.JLabel customerLbl;
    private javax.swing.JLabel headerLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton orderBtn;
    private javax.swing.JTextArea outputField;
    private javax.swing.JTextField productField;
    private javax.swing.JLabel productLbl;
    private javax.swing.JTable productTable;
    private javax.swing.JSpinner quantityField;
    private javax.swing.JLabel quantityLbl;
    private javax.swing.JComboBox<String> sellCombo;
    private javax.swing.JLabel sellerLbl;
    // End of variables declaration//GEN-END:variables
}
